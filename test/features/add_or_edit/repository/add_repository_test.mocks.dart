// Mocks generated by Mockito 5.4.4 from annotations
// in locate_me/test/features/add_or_edit/repository/add_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:locate_me/core/common_features/category/enums/category.dart'
    as _i5;
import 'package:locate_me/core/common_features/database/local/repository/location/location_repository_impl.dart'
    as _i2;
import 'package:locate_me/features/home/model/place_item_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LocationRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationRepositoryImpl extends _i1.Mock
    implements _i2.LocationRepositoryImpl {
  @override
  _i3.Future<void> deleteAllLocations() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllLocations,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<int> deleteLocation(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteLocation,
          [id],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<_i4.PlaceItemModel?> getLocation(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getLocation,
          [id],
        ),
        returnValue: _i3.Future<_i4.PlaceItemModel?>.value(),
        returnValueForMissingStub: _i3.Future<_i4.PlaceItemModel?>.value(),
      ) as _i3.Future<_i4.PlaceItemModel?>);

  @override
  _i3.Future<List<_i4.PlaceItemModel>> getLocations() => (super.noSuchMethod(
        Invocation.method(
          #getLocations,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.PlaceItemModel>>.value(<_i4.PlaceItemModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.PlaceItemModel>>.value(<_i4.PlaceItemModel>[]),
      ) as _i3.Future<List<_i4.PlaceItemModel>>);

  @override
  _i3.Future<int> insertLocation(_i4.PlaceItemModel? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertLocation,
          [location],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.PlaceItemModel>> searchLocations(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchLocations,
          [query],
        ),
        returnValue:
            _i3.Future<List<_i4.PlaceItemModel>>.value(<_i4.PlaceItemModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.PlaceItemModel>>.value(<_i4.PlaceItemModel>[]),
      ) as _i3.Future<List<_i4.PlaceItemModel>>);

  @override
  _i3.Future<void> updateLocation(
    int? id,
    _i4.PlaceItemModel? location,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocation,
          [
            id,
            location,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Stream<List<_i4.PlaceItemModel>> watchLocations() => (super.noSuchMethod(
        Invocation.method(
          #watchLocations,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
        returnValueForMissingStub: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
      ) as _i3.Stream<List<_i4.PlaceItemModel>>);

  @override
  _i3.Future<void> updateFavoriteStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #updateFavoriteStatus,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Stream<List<_i4.PlaceItemModel>> watchFavoriteLocations() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchFavoriteLocations,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
        returnValueForMissingStub: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
      ) as _i3.Stream<List<_i4.PlaceItemModel>>);

  @override
  _i3.Stream<List<_i4.PlaceItemModel>> watchLocationsByCategory(
          _i5.CategoryEnums? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchLocationsByCategory,
          [category],
        ),
        returnValue: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
        returnValueForMissingStub: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
      ) as _i3.Stream<List<_i4.PlaceItemModel>>);

  @override
  _i3.Stream<List<_i4.PlaceItemModel>> watchLocationsWithLanguageProvider() =>
      (super.noSuchMethod(
        Invocation.method(
          #watchLocationsWithLanguageProvider,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
        returnValueForMissingStub: _i3.Stream<List<_i4.PlaceItemModel>>.empty(),
      ) as _i3.Stream<List<_i4.PlaceItemModel>>);

  @override
  _i3.Future<void> importLocations(List<_i4.PlaceItemModel>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #importLocations,
          [data],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
